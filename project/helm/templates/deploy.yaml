apiVersion: apps/v1
kind: Deployment
metadata:
  name: techtrends
  namespace: {{ .Values.namespace.name }}
## Defining desired config for the Deployment resource
spec:
  replicas: {{ .Values.replicaCount }}
  ## Identify pods managed by the deployment using the selector
  selector:
    matchLabels:
      app: techtrends
  ## Set the config for the pods
  template:
    metadata:
      labels:
        app: techtrends
    ## Define the desired state of the pod config
    spec:
      containers:
        ## Specify the image to be executed inside the container
      - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        name: techtrends
        ## Expose the port on which the container is listening
        ports:
        - containerPort: {{ .Values.containerPort }}
          protocol: TCP
        ## Define the rules for liveness probes
        livenessProbe:
          httpGet:
            path: {{ .Values.livenessProbe.httpGet.path }}
            port: {{ .Values.containerPort }}
        ## Define the rules for readiness probes
        readinessProbe:
          httpGet:
            path: {{ .Values.readinessProbe.httpGet.path }}
            port: {{ .Values.containerPort }}
        ## Set resource requests and limits for the application
        resources:
        ## Resource request to gaurantee the desired amount
          requests:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}
        ## Resource limits to ensure application is not consuming more resources than desired
          limits:
            memory: {{ .Values.resources.requests.memory }}
            cpu: {{ .Values.resources.requests.cpu }}